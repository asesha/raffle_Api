CREATE DATABASE RAFFLE;
USE RAFFLE;

CREATE TABLE RAFFLE (
    RAFFLE_ID     SERIAL PRIMARY KEY, 
    RAFFLE_NAME   VARCHAR(40)  UNIQUE  NOT NULL,
    PRIZE_COUNT INT NOT NULL,
    TICKET_PRIZE INT NOT NULL,
    TICKET_PRIZE_LEVEL VARCHAR(6) NOT NULL,
    CREATED_ON  DATE NOT NULL,
    CREATED_BY VARCHAR(40),
    UPDATED_ON DATE NOT NULL,
    UPDATED_BY VARCHAR(40),
	START_DATE  DATE NOT NULL,
	START_TIME  TIME NOT NULL,
    END_DATE  DATE NOT NULL,
	END_TIME  TIME NOT NULL,
    DRAWING_DATE  DATE NOT NULL,
	DRAWING_TIME  TIME NOT NULL,
    MIN_TICKETS INT NOT NULL,
    MAX_TICKETS INT NOT NULL,
    MAX_TICKETS_PRIZE_LEVEL VARCHAR(6) NOT NULL           
);

ALTER TABLE RAFFLE ADD COLUMN PRIZE_SHIPMENT_METHOD_LEVEL VARCHAR(6);
ALTER TABLE RAFFLE ADD COLUMN PRIZE_SHIPMENT_METHOD VARCHAR(8);
ALTER TABLE RAFFLE ADD COLUMN THIRD_PARTY_ID_FK INT;


CREATE TABLE PRODUCT (
	 PRODUCT_ID    SERIAL PRIMARY KEY, 
     PRODUCT_NAME   VARCHAR(40) UNIQUE NOT NULL,
     PRODUCT_CATEGORY   VARCHAR(100)  NOT NULL,
     PRODUCT_IMAGE VARCHAR(100)  NOT NULL,
     PRODUCT_VIDEO VARCHAR(100)  NOT NULL,
     PRODUCT_DESC VARCHAR(100)  NOT NULL,
	 CREATED_ON  DATE NOT NULL,
     CREATED_BY VARCHAR(40),
     UPDATED_ON DATE NOT NULL,
     UPDATED_BY VARCHAR(40)             
);


CREATE TABLE USERS (
	 USER_ID    SERIAL PRIMARY KEY, 
     USER_NAME   VARCHAR(40) UNIQUE NOT NULL,
     WALLET_ID    INT,
     EMAIL   VARCHAR(40)  NOT NULL,
     PHONE VARCHAR(40)  NOT NULL,
     ADDRESS VARCHAR(100)  NOT NULL,
	 CREATED_ON  DATE NOT NULL,
     CREATED_BY VARCHAR(40) NOT NULL,
     UPDATED_ON DATE,
     UPDATED_BY VARCHAR(40)           
);


CREATE TABLE USER_RAFFLE (
	 USER_ACTION_ID SERIAL PRIMARY KEY, 
     USER_ID_FK    INT  NOT NULL, 
     RAFFLE_ID_FK   INT NOT NULL,
     CREATED_ON  DATE NOT NULL,
     STATUS CHAR(1)               
);

ALTER TABLE USER_RAFFLE ADD FOREIGN KEY (USER_ID_FK) REFERENCES USERS(USER_ID);
ALTER TABLE USER_RAFFLE ADD FOREIGN KEY (RAFFLE_ID_FK) REFERENCES RAFFLE(RAFFLE_ID);


CREATE TABLE RAFFLE_TICKETS (
	RAFFLE_TICKETS_ID  SERIAL PRIMARY KEY, 
    RAFFLE_ID_FK  INT  NOT NULL, 
    TICKET_ID   INT  NOT NULL,
    USER_ID_FK INT NOT NULL,
    CREATED_ON  DATE NOT NULL,
    UNIQUE (RAFFLE_ID_FK,TICKET_ID)
);

ALTER TABLE RAFFLE_TICKETS ADD FOREIGN KEY (RAFFLE_ID_FK) REFERENCES RAFFLE(RAFFLE_ID);
ALTER TABLE RAFFLE_TICKETS ADD FOREIGN KEY (USER_ID_FK) REFERENCES USERS(USER_ID);


CREATE TABLE RAFFLE_PRIZE_DETAILS(
	RAFFLE_PRIZE_ID  SERIAL PRIMARY KEY,
    RAFFLE_ID_FK INT NOT NULL,
    PRIZE_POSITION INT NOT NULL,
    PRIZE_INDEX INT NOT NULL,
    PRODUCT_ID_FK  INT,
	WINNER_ID_FK  INT,
	TICKET_ID  INT,
    CREATED_ON  DATE NOT NULL,
    CREATED_BY VARCHAR(40),
    UPDATED_ON DATE,
    UPDATED_BY VARCHAR(40),
    UNIQUE (RAFFLE_ID_FK,PRIZE_POSITION,PRIZE_INDEX)
);


ALTER TABLE RAFFLE_PRIZE_DETAILS ADD FOREIGN KEY (RAFFLE_ID_FK) REFERENCES RAFFLE(RAFFLE_ID);  
ALTER TABLE RAFFLE_PRIZE_DETAILS ADD FOREIGN KEY (PRODUCT_ID_FK) REFERENCES PRODUCT(PRODUCT_ID);
ALTER TABLE RAFFLE_PRIZE_DETAILS ADD FOREIGN KEY (WINNER_ID_FK) REFERENCES USERS(USER_ID);



CREATE TABLE RAFFLE_TICKET_CONFIG (
    TICKET_CONFIG_ID  SERIAL PRIMARY KEY, 
    PRIZE_POSITION INT NOT NULL,
    TICKET_PRIZE INT NOT NULL,
	MAX_TICKETS INT NOT NULL,
    RAFFLE_ID_FK INT NOT NULL,                
    UNIQUE (RAFFLE_ID_FK,PRIZE_POSITION)               
);

ALTER TABLE RAFFLE_TICKET_CONFIG ADD FOREIGN KEY (RAFFLE_ID_FK) REFERENCES RAFFLE(RAFFLE_ID);


CREATE TABLE USER_ADDRESS_DETAILS (
	 ADDRESS_DETAILS_ID SERIAL PRIMARY KEY, 
     USER_ID_FK    INT  NOT NULL, 
     FIRST_NAME   VARCHAR(30) NOT NULL,
     LAST_NAME  VARCHAR(30) NOT NULL,
     EMAIL  VARCHAR(30) NOT NULL,
     COUNTRY  VARCHAR(30) NOT NULL,
     STREET_ADDRESS1  VARCHAR(30) NOT NULL,
     STREET_ADDRESS2  VARCHAR(30) NOT NULL,
     CITY  VARCHAR(30) NOT NULL,
     STATE  VARCHAR(30) NOT NULL,
     PINCODE  VARCHAR(20) NOT NULL,
     PHONE VARCHAR(20) NOT NULL,
     ADDRESS_CATEGORY VARCHAR(20) NOT NULL,
     STATUS CHAR(1),
     CREATED_ON  DATE NOT NULL,
     CREATED_BY VARCHAR(40),
     UPDATED_ON DATE,
     UPDATED_BY VARCHAR(40)               
);

ALTER TABLE USER_ADDRESS_DETAILS ADD FOREIGN KEY (USER_ID_FK) REFERENCES USERS(USER_ID);


CREATE TABLE PAYMENT (
	 PAYMENT_TRANSACTION_ID SERIAL PRIMARY KEY, 
     USER_ID_FK    INT  NOT NULL, 
     RAFFLE_ID_FK INT NOT NULL,
     PAYMENT_TYPE VARCHAR(30) NOT NULL,
     AMOUNT INT NOT NULL,
     NO_OF_TICKETS INT NOT NULL,
     PAYMENT_DATE DATE NOT NULL,
     LAST_UPDATE DATE NOT NULL,
     TRANSACTION_STATUS  VARCHAR(30) NOT NULL
 );
 
ALTER TABLE PAYMENT ADD FOREIGN KEY (USER_ID_FK) REFERENCES USERS(USER_ID);
ALTER TABLE PAYMENT ADD FOREIGN KEY (RAFFLE_ID_FK) REFERENCES RAFFLE(RAFFLE_ID);



CREATE TABLE RAFFLE_PRIZE_SHIPMENT_DETAILS(
	RAFFLE_PRIZE_SHIPMENT_ID  SERIAL PRIMARY KEY,
    RAFFLE_ID_FK INT NOT NULL,
    PRIZE_POSITION INT NOT NULL,
    PRIZE_INDEX INT NOT NULL,
    PRIZE_SHIPMENT_METHOD  VARCHAR(40) NOT NULL,
	THIRD_PARTY_ID_FK  INT,
    CREATED_ON  DATE NOT NULL,
    CREATED_BY VARCHAR(40),
    UPDATED_ON DATE,
    UPDATED_BY VARCHAR(40),
    UNIQUE (RAFFLE_ID_FK,PRIZE_POSITION,PRIZE_INDEX)
);


ALTER TABLE RAFFLE_PRIZE_SHIPMENT_DETAILS ADD FOREIGN KEY (RAFFLE_ID_FK) REFERENCES RAFFLE(RAFFLE_ID);  






---
SELECT * FROM information_schema.tables;
SELECT * FROM information_schema.tables where table_schema ='public';

SELECT * FROM RAFFLE_PRIZE_DETAILS WHERE RAFFLE_ID_FK=6;
UPDATE RAFFLE_PRIZE_DETAILS SET WINNER_ID_FK = NULL, TICKET_ID = NULL  WHERE RAFFLE_ID_FK = 6;

DROP table user_auction, auction_tickets, auction_prize_details, auction;

INSERT INTO USER_ADDRESS_DETAILS(USER_ID_FK,FIRST_NAME,LAST_NAME,EMAIL,COUNTRY,STREET_ADDRESS1,STREET_ADDRESS2,CITY,STATE,PINCODE,PHONE,ADDRESS_CATEGORY,CREATED_ON,CREATED_BY,UPDATED_ON,UPDATED_BY)
VALUES(1,'Raja','Ravi','raja@gmail.com','India','VOC street','81-k','Chennai','Tamilnadu','629701','42423323','Billing','2023-01-26','ADMIN','2023-01-26','ADMIN');

INSERT INTO PAYMENT 
(USER_ID_FK, RAFFLE_ID_FK, PAYMENT_TYPE, AMOUNT, NO_OF_TICKETS, PAYMENT_DATE, LAST_UPDATE, TRANSACTION_STATUS ) 
VALUES (1,5,'NFT',100,10,'2023-01-26','2023-01-26','ACTIVE');


SELECT * FROM USER_ADDRESS_DETAILS;

--Soft staking , Edit London, Node Army
